loadDetalle() {
    if (this.detalleCt) {
      this.formData.reset({
        enfermedadCausa: this.detalleCt.enfermedad,
        tipocausaD: this.detalleCt.tipoCausa,
        descripcionD: this.detalleCt.descripcionCausa,
        
      });
    }
  }
  private iniciarFormulario(): FormGroup {
    return this.fb.group({
      enfermedadCausa: ['', [Validators.required]],
      tipocausaD: ['', [Validators.required]],
      descripcionD: ['', [Validators.required]]
    });
  }
  
  esCampoValido(campo: string) {
    const validarCampo = this.formData.get(campo);
    return !validarCampo?.valid && validarCampo?.touched
      ? "is-invalid"
      : validarCampo?.touched
      ? "is-valid"
      : "";
  }
  

  

  guardar() {
    console.log("Entrando en la función guardar");
    console.log("Formulario válido:", this.formData.valid);
    
    if (this.formData.valid) {
      console.log("Formulario es válido. Procediendo a guardar.");
      if (this.detalleSeleccionado == null) {
        console.log("Registrando...");
        this.registrando();
      } else {
        console.log("Editando...");
        this.editar();
      }
    }
    console.log("Cerrando modal.");
    this.modalService.dismissAll();
  }
  
  registrando() {
    const detalle: DetalleCausa = {
      descripcionCausa: this.formData.get('descripcionD').value,
      enfermedad: {
        idenfermedad: this.formData.get('enfermedadCausa').value
      },
      tipoCausa:{
        idTipoCausa:this.formData.get('tipocausaD').value
      }
    };
    this.detallecausaservice.registrar(detalle).subscribe((resp: any) => {
      if (resp) {
         console.log(resp); 
         Swal.fire({
          position: 'center',
          title: 'Buen trabajo',
          text: 'Datos guardados con exito',
          icon: 'info',
       });
        this.formData.reset();
       this.recargar();
        this.modalService.dismissAll();
      }
      console.log("entro"); 
      console.log(resp); 
      
    }, (err: any) => {
      /* console.log(err); */
       Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Algo paso, hable con el administrador',
      });
    })
  }
  editar(){
    const descripcion= this.formData.get('descripcionD').value;
    this.detalleSeleccionado.descripcionCausa= descripcion;
    this.detalleSeleccionado.enfermedad= this.enfermedadSeleccionada;
    this.detalleSeleccionado.tipoCausa=this.tipocasaSeleccionada;
    ///
    this.detallecausaservice.actualizar(this.detalleSeleccionado).subscribe(resp=>{
      if(resp){
        Swal.fire({
          position: 'center',
          title: 'Buen trabajo',
          text: 'Datos modificados con éxito',
          icon: 'info',
        });
        this.formData.reset();
        this.recargar();
        this.modalService.dismissAll();
      }
  
    },(err: any)=>{
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Error al editar, hable con el administrador',
      });
    })
  }
  recargar() {
    let currentUrl = this.router.url;
    this.router.routeReuseStrategy.shouldReuseRoute = () => false;
    this.router.onSameUrlNavigation = "reload";
    this.router.navigate([currentUrl]);
  }
  enviarDato(codigo: number) {
    console.log("Enviando enfermedad con id:", codigo);
    const enfermedadSeleccionada = this.listEnfermedad.find(enfermedad => enfermedad.idenfermedad === codigo);
    if (enfermedadSeleccionada) {
      this.enfermedadSeleccionadaNombre = enfermedadSeleccionada.nombreEnfermedad;
    }
  }
  
  enviarTipoCausa(codigo: number) {
    console.log("Enviando tipo de causa con id:", codigo);
    const tipocausaSeleccionada = this.listTipoCausa.find(tipoCausa => tipoCausa.idTipoCausa === codigo);
    if (tipocausaSeleccionada) {
      this.tipoCSeleccionadaNombre = tipocausaSeleccionada.nombreCientificoTC;
    }
  }